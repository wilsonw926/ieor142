library(dplyr)
library(ggplot2)
library(GGally)
library(caTools)
library(ROCR)
# Reading and splitting data
loans <- read.csv("loans.csv")
# Set a seed so we all get the same split
set.seed(144)
# sample.split splits the dataset smartly for binary outcomes:
# it keeps the same ratio defaulated/not defaulted in the train and test sets (first argument)
# SplitRatio = 0.7 means that we will put 70% of the data in the training, 30% in the testing
split = sample.split(loans$not.fully.paid, SplitRatio = 0.7)
# what is a split?
loans.train <- filter(loans, split == TRUE) # is split a variable in loans?
loans.test <- filter(loans, split == FALSE)
# How many loans have defaulted?
table(loans.train$not.fully.paid)
?ggscatmat
ggscatmat(loans.train, alpha = 0.8)
# Baseline model: predict that no one defaults
# Accuracy of baseline on training:
table(loans.train$not.fully.paid)
5596/(5596 + 1065)
# Accuracy of baseline on testing:
table(loans.test$not.fully.paid)
2399/(2399 + 456)
# Excercise
# What is the TPR and FPR of the baseline?
TPR = 0/1065
FPR = 0/5596
mod <- glm(not.fully.paid ~ installment + log.annual.inc + fico + revol.bal +
inq.last.6mths + pub.rec, data=loans.train, family="binomial")
?glm
summary(mod)
