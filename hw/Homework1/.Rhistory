#
# Make sure your working directory was set as "Source file location".
# Make sure your data files are in the same folder as this R script.
#
install.packages(c("dplyr", "ggplot2", "GGally"))
library(dplyr)
library(ggplot2)
library(GGally)
install.packages("car")
library(car) # for VIF
# Load data:
elantra <- read.csv("Elantra142-Fall2018.csv")
str(elantra)
head(elantra)
# Plot scatter matrix
ggscatmat(elantra, columns = 2:9, alpha = 0.8)
# Plot scatter matrix
ggscatmat(elantra, columns = 2:9, alpha = 0.8)
# Plot scatter matrix
ggscatmat(elantra, columns = 0:6, alpha = 0.8)
elantra.train <- filter(elantra, Year <= 2015 & Year >= 2010)
head(elantra.train)
elantra.train <- filter(elantra, Year >= 2010)
elantra.train <- filter(elantra, Year <= 2015)
head(elantra.train)
tail(elantra.train)
elantra.test <- filter(elantra, Year <= 2018 & Year >= 2016)
# train the model
#lm(y~x1+x2+...,data)
help(lm)
mod1 <- lm(ElantraSales ~ Unemployment + ElantraQueries + CPI.Energy + CPI.All = elantra.train)
mod1 <- lm(ElantraSales ~ Unemployment + ElantraQueries + CPI.Energy + CPI.All, data = elantra.train)
View(mod1)
summary(mod1)
# Plot scatter matrix
ggscatmat(elantra, columns = 0:8, alpha = 0.8)
summary(mod4)
mod1 <- lm(ElantraSales ~ Unemployment + ElantraQueries + CPI.Energy + CPI.All, data = elantra.train)
summary(mod1)
mod1 <- lm(ElantraSales ~ Unemployment + ElantraQueries + CPI.All, data = elantra.train)
summary(mod1)
mod1 <- lm(ElantraSales ~ ElantraQueries + CPI.All, data = elantra.train)
summary(mod1)
# A better model...
# Remove FrancePop
mod2 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All + CPI.Energy + Unemployment, data = elantra.train)
summary(mod2)
# A better model...
# Remove FrancePop
mod2 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All + CPI.Energy, data = elantra.train)
summary(mod2)
# A better model...
# Remove FrancePop
mod2 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All, data = elantra.train)
summary(mod2)
+ CPI.Energy
# A better model...
# Remove FrancePop
mod2 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All + CPI.Energy + Unemployment, data = elantra.train)
summary(mod2)
# A better model...
# Remove FrancePop
mod2 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All + CPI.Energy, data = elantra.train)
summary(mod2)
# A better model...
# Remove FrancePop
mod2 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All, data = elantra.train)
summary(mod2)
# A better model...
# Remove FrancePop
mod2 <- lm(ElantraSales ~ MonthFactor + CPI.All, data = elantra.train)
summary(mod2)
# A better model...
# Remove FrancePop
mod2 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All, data = elantra.train)
summary(mod2)
# A better model...
# Remove FrancePop
mod2 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All + CPI.Energy + Unemployment, data = elantra.train)
summary(mod2)
mod3 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All, data = elantra.train)
summary(mod3)
vif(mod3)
elantraPredictions <- predict(mod3, newdata=elantra.test)
# this builds a vector of predicted values on the test set
SSE = sum((elantra.test$LogAuctionIndex - elantraPredictions)^2)
SST = sum((elantra.test$LogAuctionIndex - mean(elantra.train$LogAuctionIndex))^2)
OSR2 = 1 - SSE/SST
# this builds a vector of predicted values on the test set
SSE = sum((elantra.test$LogAuctionIndex - elantraPredictions)^2)
SST = sum((elantra.test$LogAuctionIndex - mean(elantra.train$MonthFactor))^2)
# this builds a vector of predicted values on the test set
SSE = sum((elantra.test$LogAuctionIndex - elantraPredictions)^2)
SST = sum((elantra.test$LogAuctionIndex - mean(elantra.train$ElantraSales))^2)
OSR2 = 1 - SSE/SST
# this builds a vector of predicted values on the test set
SSE = sum((elantra.test$ElantraSales - elantraPredictions)^2)
SST = sum((elantra.test$ElantraSales - mean(elantra.train$ElantraSales))^2)
OSR2 = 1 - SSE/SST
mod3 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All, data = elantra.train)
summary(mod3)
mod3 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All + CPI.Energy, data = elantra.train)
summary(mod3)
mod3 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All, data = elantra.train)
summary(mod3)
vif(mod3)
elantraPredictions <- predict(mod3, newdata=elantra.test)
# this builds a vector of predicted values on the test set
SSE = sum((elantra.test$ElantraSales - elantraPredictions)^2)
SST = sum((elantra.test$ElantraSales - mean(elantra.train$ElantraSales))^2)
OSR2 = 1 - SSE/SST
mod3 <- lm(ElantraSales ~ ElantraQueries + CPI.All, data = elantra.train)
summary(mod3)
MonthFactor +
MonthFactor +
mod3 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All, data = elantra.train)
summary(mod3)
vif(mod3)
mod3 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All, data = elantra.train)
summary(mod3)
vif(mod3)
elantraPredictions <- predict(mod3, newdata=elantra.test)
# this builds a vector of predicted values on the test set
SSE = sum((elantra.test$ElantraSales - elantraPredictions)^2)
SST = sum((elantra.test$ElantraSales - mean(elantra.train$ElantraSales))^2)
OSR2 = 1 - SSE/SST
OSR2
# Load NEW HONDA data:
honda <- read.csv("HondaOdysseySales.csv")
str(honda)
head(honda)
# Plot scatter matrix
ggscatmat(honda, columns = 0:8, alpha = 0.8)
honda.train <- filter(honda, Year <= 2015)
head(honda.train)
tail(honda.train)
# Plot scatter matrix
ggscatmat(honda, columns = 5:9, alpha = 0.8)
honda.train <- filter(honda, Year <= 2015)
# Plot scatter matrix
ggscatmat(honda, columns = 5:11, alpha = 0.8)
# Plot scatter matrix
ggscatmat(honda, columns = 5:10, alpha = 0.8)
honda.train <- filter(honda, Year <= 2015)
View(honda)
View(honda)
# Plot scatter matrix
ggscatmat(honda, columns = 9:10, alpha = 0.8)
# Plot scatter matrix
ggscatmat(honda, columns = 8:10, alpha = 0.8)
# Plot scatter matrix
ggscatmat(honda, columns = 0:10, alpha = 0.8)
honda.train <- filter(honda, Year <= 2015)
head(honda.train)
tail(honda.train)
honda.test <- filter(honda, Year <= 2018 & Year >= 2016)
View(elantra)
# train the model
mod1 <- lm(HondaSales ~ HondaQueries + CPI.All + Unemployment + CPI.Energy, data = honda.train)
# train the model
mod1 <- lm(HondaSales ~ MonthFactor + HondaQueries + CPI.All + Unemployment + CPI.Energy, data = honda.train)
summary(mod1)
# train the model
mod1 <- lm(HondaSales ~ MonthFactor + HondaQueries + CPI.All + Unemployment + CPI.Energy, data = honda.train)
# Load NEW HONDA data:
honda <- read.csv("HondaOdysseySales.csv")
str(honda)
head(honda)
# Plot scatter matrix
ggscatmat(honda, columns = 0:10, alpha = 0.8)
honda.train <- filter(honda, Year <= 2015)
head(honda.train)
tail(honda.train)
honda.test <- filter(honda, Year <= 2018 & Year >= 2016)
# train the model
mod1 <- lm(HondaSales ~ MonthFactor + HondaQueries + CPI.All + Unemployment + CPI.Energy, data = honda.train)
summary(mod1)
vif(mod1)
# train the model
mod1 <- lm(HondaSales ~ MonthFactor + HondaQueries + CPI.All + Unemployment, data = honda.train)
summary(mod1)
# train the model
mod1 <- lm(HondaSales ~ MonthFactor + HondaQueries + CPI.All, data = honda.train)
summary(mod1)
# train the model
mod1 <- lm(HondaSales ~ MonthFactor + HondaQueries, data = honda.train)
# train the model
mod1 <- lm(HondaSales ~ MonthFactor + HondaQueries, data = honda.train)
summary(mod1)
# train the model
mod1 <- lm(HondaSales ~ MonthFactor + HondaQueries + CPI.All + Unemployment, data = honda.train)
summary(mod1)
# train the model
mod1 <- lm(HondaSales ~ MonthFactor + HondaQueries + Unemployment, data = honda.train)
summary(mod1)
# train the model
mod1 <- lm(HondaSales ~ MonthFactor + HondaQueries + CPI.All + Unemployment, data = honda.train)
summary(mod1)
# train the model
mod4 <- lm(HondaSales ~ MonthFactor + HondaQueries + CPI.All + Unemployment, data = honda.train)
summary(mod4)
hondaPredictions <- predict(mod4, newdata=honda.test)
# this builds a vector of predicted values on the test set
SSE = sum((elantra.test$ElantraSales - elantraPredictions)^2)
SST = sum((elantra.test$ElantraSales - mean(elantra.train$ElantraSales))^2)
OSR2 = 1 - SSE/SST
OSR2
# this builds a vector of predicted values on the test set
SSE = sum((honda.test$HondaSales - hondaPredictions)^2)
SST = sum((honda.test$HondaSales - mean(honda.train$HondaSales))^2)
OSR2 = 1 - SSE/SST
OSR2
mod3 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All, data = elantra.train)
summary(mod3)
vif(mod3)
elantraPredictions <- predict(mod3, newdata=elantra.test)
# this builds a vector of predicted values on the test set
SSE = sum((elantra.test$ElantraSales - elantraPredictions)^2)
SST = sum((elantra.test$ElantraSales - mean(elantra.train$ElantraSales))^2)
OSR2 = 1 - SSE/SST
# Load NEW HONDA data:
honda <- read.csv("HondaOdysseySales.csv")
str(honda)
head(honda)
# Plot scatter matrix
ggscatmat(honda, columns = 0:10, alpha = 0.8)
honda.train <- filter(honda, Year <= 2015)
head(honda.train)
tail(honda.train)
honda.test <- filter(honda, Year <= 2018 & Year >= 2016)
# train the model
mod4 <- lm(HondaSales ~ MonthFactor + HondaQueries + CPI.All + Unemployment, data = honda.train)
summary(mod4)
hondaPredictions <- predict(mod4, newdata=honda.test)
# this builds a vector of predicted values on the test set
SSE = sum((honda.test$HondaSales - hondaPredictions)^2)
# this builds a vector of predicted values on the test set
SSE = sum((honda.test$HondaSales - hondaPredictions)^2)
SST = sum((honda.test$HondaSales - mean(honda.train$HondaSales))^2)
OSR2 = 1 - SSE/SST
OSR2
elantraNewPredictions <- predict(mod3, newdata=elantra.new.test)
elantraNewPredictions <- predict(mod3, newdata=elantra.test)
hondaNewPredictions <- predict(mod4, newdata=elantra.test)
elantraNewPredictions
hondaNewPredictions
hondaNewPredictions <- predict(mod4, newdata=honda.test)
elantraNewPredictions
hondaNewPredictions
AugustEst <- read.csv("AugustEst.csv")
AugustEst.train <- filter(AugustEst, Year <= 2015)
head(AugustEst.train)
tail(AugustEst.train)
AugustEst.test <- filter(AugustEst, Year <= 2018 & Year >= 2016)
# train the model
elantramod <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All, data = AugustEst.train)
summary(elantramod)
hondamod <- lm(HondaSales ~ MonthFactor + HondaQueries + CPI.All + Unemployment, data = AugustEst.train)
summary(hondamod)
elantraNewPredictions <- predict(elantramod, newdata=AugustEst.test)
hondaNewPredictions <- predict(hondamod, newdata=AugustEst.test)
elantraNewPredictions
hondaNewPredictions
AugustEst <- read.csv("AugustEst.csv")
AugustEst.train <- filter(AugustEst, Year <= 2015)
head(AugustEst.train)
tail(AugustEst.train)
AugustEst.test <- filter(AugustEst, Year <= 2018 & Year >= 2016)
# train the model
elantramod <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All, data = AugustEst.train)
summary(elantramod)
hondamod <- lm(HondaSales ~ MonthFactor + HondaQueries + CPI.All + Unemployment, data = AugustEst.train)
summary(hondamod)
elantraNewPredictions <- predict(elantramod, newdata=AugustEst.test)
hondaNewPredictions <- predict(hondamod, newdata=AugustEst.test)
elantraNewPredictions
hondaNewPredictions
